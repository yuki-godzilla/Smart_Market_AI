name: CI

on:
  push:
    branches: [ "**" ]
  pull_request:
    branches: [ "**" ]

# 同じブランチの古い実行をキャンセル（無駄な消費を防ぐ）
concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-test:
    runs-on: ubuntu-latest
    timeout-minutes: 20

    strategy:
      matrix:
        python-version: ["3.11"]  # 慣れたら ["3.11","3.12"] に拡張OK

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"

      - name: Show versions
        run: |
          python -V
          pip -V

      - name: Install dependencies (from setup/)
        run: |
          python -m pip install --upgrade pip
          pip install -r setup/requirements.txt -r setup/requirements-dev.txt

      # Actionsの環境で import backend が通るように明示（保険）
      - name: Set PYTHONPATH to repo root
        run: echo "PYTHONPATH=$GITHUB_WORKSPACE" >> $GITHUB_ENV

      - name: Ruff (lint)
        run: ruff check .

      - name: Black (format check)
        run: black --check .

      - name: Mypy (type check)
        run: mypy .

      - name: Pytest (unit tests)
        run: |
          pytest -q --maxfail=1 --disable-warnings --cov --cov-report=xml
        env:
          # もしHTTPアクセス等のテストが将来入るならタイムゾーンなどもここで固定可
          PYTHONPATH: ${{ env.PYTHONPATH }}

      # （任意）カバレッジを成果物として保存
      - name: Upload coverage.xml
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ matrix.python-version }}
          path: coverage.xml
